@model PaginationResponse //only the page count and current page are needed
@{
    var linkTemplate = string.Concat(Model.BaseUrl, "?page={0}&RecordsPerPage={1}");
    var activatePreviousButton = Model.Page > 1;
    var activateNextButton = Model.Page < Model.TotalPagesAmount;
}
<nav>
    <ul class="pagination">
        <li class="page-item @(activatePreviousButton ? null : "disabled")">
            @if (activatePreviousButton)
            {
                <a class="page-link"
                   href="@string.Format(linkTemplate, Model.Page - 1, Model.RecordsPerPage)">
                    Previous
                </a>
            }
            else
            {
                <span class="page-link">Previous</span>
            }
        </li>
        @for (var p = 1; p <= Model.TotalPagesAmount; p++)
        {
            <li class="page-item @(p == Model.Page ? "active" : null)">
                <a class="page-link" href="@string.Format(linkTemplate,p,Model.RecordsPerPage)">
                    @p
                </a>
            </li>
        }
        <li class="page-item @(activateNextButton ? null : "disabled")">
            @if (activateNextButton)
            {
                <a class="page-link"
                   href="@string.Format(linkTemplate, Model.Page + 1, Model.RecordsPerPage)">
                    Next
                </a>
            }
            else
            {
                <span class="page-link">Next</span>
            }
        </li>
    </ul>
</nav>
